package templates

import (
    "Factory/pkg/models"
    "strconv"
    "fmt"
)

// Компонент для отображения списка кодов маркировки
templ MarkCodesList(codes []models.MarkCode, taskID int) {
    <div class="container mx-auto p-6">
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-2xl font-bold">Коды маркировки для задания #{strconv.Itoa(taskID)}</h1>
            <div class="flex space-x-2">
                <a href="/tasks"
                   hx-get="/tasks"
                   hx-target="#content"
                   hx-swap="innerHTML"
                   class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">
                    К списку заданий
                </a>
            </div>
        </div>

        <div class="bg-white shadow-md rounded p-6 mb-6">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-xl font-semibold">Статистика кодов</h2>
                <a href={ templ.SafeURL(fmt.Sprintf("/tasks/%d", taskID)) }
                   hx-get={ string(fmt.Sprintf("/tasks/%d", taskID)) }
                   hx-target="#content"
                   hx-swap="innerHTML"
                   class="text-blue-500 hover:underline">
                    Вернуться к заданию
                </a>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
                <div class="bg-blue-50 p-4 rounded-lg border border-blue-100">
                    <div class="text-center">
                        <div class="text-2xl font-bold text-blue-700">{strconv.Itoa(len(codes))}</div>
                        <div class="text-sm text-blue-700">Всего кодов</div>
                    </div>
                </div>
                <div class="bg-green-50 p-4 rounded-lg border border-green-100">
                    <div class="text-center">
                        <div class="text-2xl font-bold text-green-700">
                            {strconv.Itoa(countCodesByStatus(codes, models.MarkCodeStatusNew))}
                        </div>
                        <div class="text-sm text-green-700">Доступные коды</div>
                    </div>
                </div>
                <div class="bg-yellow-50 p-4 rounded-lg border border-yellow-100">
                    <div class="text-center">
                        <div class="text-2xl font-bold text-yellow-700">
                            {strconv.Itoa(countCodesByStatus(codes, models.MarkCodeStatusUsed))}
                        </div>
                        <div class="text-sm text-yellow-700">Использованные коды</div>
                    </div>
                </div>
            </div>
        </div>

        if len(codes) == 0 {
            <div class="bg-gray-100 p-6 rounded-lg text-center">
                <p class="text-gray-600">Нет загруженных кодов маркировки для этого задания</p>
            </div>
        } else {
            <div class="bg-white shadow-md rounded-lg overflow-hidden">
                <div class="overflow-x-auto">
                    <table class="min-w-full bg-white">
                        <thead class="bg-gray-100">
                            <tr>
                                <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    № в файле
                                </th>
                                <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Код маркировки
                                </th>
                                <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Статус
                                </th>
                                <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Использован
                                </th>
                                <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Действия
                                </th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200">
                            for _, code := range codes {
                                <tr>
                                    <td class="py-3 px-4 whitespace-nowrap">
                                        <div class="text-sm text-gray-900">{strconv.Itoa(code.FilePosition)}</div>
                                    </td>
                                    <td class="py-3 px-4 whitespace-nowrap">
                                        <div class="text-sm font-mono bg-gray-100 p-2 rounded">
                                            {code.Code}
                                        </div>
                                    </td>
                                    <td class="py-3 px-4 whitespace-nowrap">
                                        if code.Status == models.MarkCodeStatusNew {
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                                                Доступен
                                            </span>
                                        } else if code.Status == models.MarkCodeStatusUsed {
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800">
                                                Использован
                                            </span>
                                        } else {
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
                                                Недействителен
                                            </span>
                                        }
                                    </td>
                                    <td class="py-3 px-4 whitespace-nowrap">
                                        <div class="text-sm text-gray-900">
                                            if !code.UsedAt.IsZero() {
                                                {code.UsedAt.Format("02.01.2006 15:04:05")}
                                            } else {
                                                -
                                            }
                                        </div>
                                    </td>
                                    <td class="py-3 px-4 whitespace-nowrap text-sm text-gray-500">
                                        <div class="flex space-x-2">
                                            if code.Status == models.MarkCodeStatusNew {
                                                <button
                                                    hx-post={ string(fmt.Sprintf("/tasks/%d/mark-codes/%d/mark-used", taskID, code.ID)) }
                                                    hx-confirm="Отметить код как использованный?"
                                                    class="text-white bg-yellow-500 hover:bg-yellow-600 px-2 py-1 rounded text-xs">
                                                    Отметить использованным
                                                </button>
                                                <button
                                                    hx-post={ string(fmt.Sprintf("/tasks/%d/mark-codes/%d/mark-invalid", taskID, code.ID)) }
                                                    hx-confirm="Отметить код как недействительный?"
                                                    class="text-white bg-red-500 hover:bg-red-600 px-2 py-1 rounded text-xs">
                                                    Отметить недействительным
                                                </button>
                                            } else {
                                                <button
                                                    hx-post={ string(fmt.Sprintf("/tasks/%d/mark-codes/%d/reset", taskID, code.ID)) }
                                                    hx-confirm="Сбросить статус кода?"
                                                    class="text-white bg-blue-500 hover:bg-blue-600 px-2 py-1 rounded text-xs">
                                                    Сбросить статус
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    </div>
}

// Функция для подсчета кодов с определенным статусом
func countCodesByStatus(codes []models.MarkCode, status string) int {
    count := 0
    for _, code := range codes {
        if code.Status == status {
            count++
        }
    }
    return count
}

// Форма для загрузки дополнительных кодов маркировки
templ UploadCodesForm(task models.Task) {
    <div class="container mx-auto p-6">
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-2xl font-bold">Загрузка кодов маркировки</h1>
            <div class="flex space-x-2">
                <a href={ templ.SafeURL(templ.URL(fmt.Sprintf("/tasks/%d", task.ID))) }
                   hx-get={ string(fmt.Sprintf("/tasks/%d", task.ID)) }
                   hx-target="#content"
                   hx-swap="innerHTML"
                   class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">
                    Вернуться к заданию
                </a>
            </div>
        </div>

        <div class="bg-white shadow-md rounded p-6">
            <h2 class="text-xl font-semibold mb-4">Загрузка кодов для задания #{strconv.Itoa(task.ID)}</h2>
            <p class="text-gray-600 mb-4">
                Загрузите файл с кодами маркировки. Каждый код должен быть на отдельной строке.
            </p>

            <form action={ templ.SafeURL(templ.URL(fmt.Sprintf("/tasks/%d/upload-codes", task.ID))) }
                  method="post"
                  enctype="multipart/form-data"
                  class="space-y-4">
                <div>
                    <label for="mark_codes" class="block text-gray-700 mb-2">
                        Файл с кодами маркировки:
                    </label>
                    <input type="file" id="mark_codes" name="mark_codes"
                           class="w-full p-2 border rounded"
                           accept=".txt,.csv"
                           required />
                    <p class="text-sm text-gray-500 mt-1">
                        Поддерживаются форматы .txt и .csv. Каждый код должен быть на отдельной строке.
                    </p>
                </div>

                <div class="mt-4">
                    <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                        Загрузить коды
                    </button>
                </div>
            </form>
        </div>
    </div>
}